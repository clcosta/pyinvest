{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Python Invest","text":"<p>Financial data extraction with Python.</p> <p>The Python Invest package is based on an unofficial data extraction API from the website Investing.com. It's a package inspired by the amazing Investpy library.</p> <p> This package consumes an unofficial open API and will validate the user's email before providing the data. After that, the user can consume all available services.</p> <p>Python Invest its a Open Source package and Free to use, respecting the MIT License.</p>"},{"location":"#requirements","title":"Requirements","text":"<p> Python &gt;= 3.10</p>"},{"location":"#installation","title":"Installation","text":"<ul> <li>pip</li> </ul> <pre><code>$ pip install python-invest\n</code></pre> <ul> <li>poetry</li> </ul> <pre><code>poetry add python-invest\n</code></pre>"},{"location":"#usage-examples","title":"Usage Examples","text":"<p>Getting historical BTC data:</p> <pre><code>from python_invest import Invest\n\ninv = Invest('youremail@email.com')\n\ndata = inv.crypto.get_historical_data(\nsymbol='BTC',\n        from_date='01/01/2023',\n        to_date='01/02/2023'\n    )\n</code></pre> <p>The API can send a verification link to your email, it's a security measure you won't be charged for anything. If this happens, you will receive an error similar to this:</p> <pre><code>Traceback (most recent call last):\n File \"...\", line 5, in &lt;module&gt;\n    data = inv.crypto.get_historical_data(symbol='BTC', from_date='01/01/2023', to_date='01/02/2023')\n    ...\nPermissionError: The Scrapper API sent to your email address the verification link. Please verify your email before run the code again.\n</code></pre> <p>If you get this error: Just open your email box and click on the verification link.</p> <p>The email would be a equal this:</p> <p></p> <p>After that, you can run the code:</p> <p><pre><code>data = inv.crypto.get_historical_data(\n        symbol='BTC',\n        from_date='01/01/2023',\n        to_date='01/02/2023'\n    )\n\nprint(data)\n</code></pre> <pre><code>      Price      Open      High       Low     Vol Change        Date\n0  16,674.3  16,618.4  16,766.9  16,551.0  136027   0.34  01/02/2023\n1  16,618.4  16,537.5  16,621.9  16,499.7  107837   0.49  01/01/2023\n</code></pre></p> <p>The default output is the Pandas DataFrame.</p>"},{"location":"advanced/","title":"Classes details","text":""},{"location":"advanced/#invest","title":"Invest","text":"<p>Invest(email: str)python_invest.invest.main.Invest</p> <p>The Invest class is the main class that will be used to interact with all project. Note the email address is required.</p> <ul> <li> <p>email: str: The email address of the user, if necessary the API will send a verification link to this email address.</p> </li> <li> <p>crypto: Crypto: The crypto attribute is used to interact with the Crypto class and he's methods, passing the Invest object instance to Crypto class.</p> </li> </ul>"},{"location":"advanced/#crypto","title":"Crypto","text":"<p>Crypto(invest_instance: Invest)python_invest.invest.crypto.Crypto</p> <p>The Crypto class will be used by the Invest class, the methods of the class will be accessed to obtain crypto area data. In Investing website is the crypto products.</p> <ul> <li> <p>method get_historical_data -&gt; dict | pandas.DataFrame</p> <p>symbol: str = None from_date: str | datetime.date = '01/01/2023' to_date: str | datetime.date = '01/02/2023' name: str = None time_frame: str = 'Daily' as_dict: bool = False</p> </li> </ul> <p>Note: The date is expected in this format: m/d/Y</p>"},{"location":"cli/","title":"Command Line Interface","text":""},{"location":"cli/#cli-command-line-interace","title":"CLI (Command Line Interace)","text":"<p> Not Implemented Yet</p>"}]}